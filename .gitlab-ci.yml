image: docker:stable

include:
  - project: divio/infra/gitlab-pipelines
    ref: master
    file: base/.gitlab-ci.yml

variables:
  BUILDX_VERSION: v0.10.4
  BUILDX_ARCH: linux-amd64
  PLATFORMS: linux/arm64/v8,linux/amd64
  PUBLIC_REPOSITORY: divio/base
  BUILDX_URL: https://github.com/docker/buildx/releases/download/${BUILDX_VERSION}/buildx-${BUILDX_VERSION}.${BUILDX_ARCH}

.setup-docker: &setup_docker_builder |-
    mkdir -p /usr/libexec/docker/cli-plugins
    wget -q -O /usr/libexec/docker/cli-plugins/docker-buildx ${BUILDX_URL}
    chmod +x /usr/libexec/docker/cli-plugins/docker-buildx
    docker buildx version
    docker buildx create --use
    docker login -u ${CI_REGISTRY_USER} -p ${CI_JOB_TOKEN} ${CI_REGISTRY}

linting:
  image: divio/lint
  stage: qa
  needs: []
  allow_failure: true
  script:
    - find .
      -type f
      -name Dockerfile
      -not -path './EOL-*'
      -print0 | xargs -0 -I %
      sh -c 'LINT_FILE_DOCKER=% /bin/lint --check --run=docker'

build-dev:
  stage: build
  needs: []
  variables:
    TARGET: dev
    IMAGE_NAME: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}-dev
  before_script:
    - *setup_docker_builder
  script:
    - >
      docker-buildx build
      --platform ${PLATFORMS}
      --build-arg TARGET=${TARGET}
      --tag ${IMAGE_NAME}
      --push
      ${CI_COMMIT_TAG#*-}
  only:
    - tags

build-prod:
  stage: build
  needs: []
  variables:
    TARGET: prod
    IMAGE_NAME: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
  before_script:
    - *setup_docker_builder
  script:
    - >
      docker-buildx build
      --platform ${PLATFORMS}
      --build-arg TARGET=${TARGET}
      --tag ${IMAGE_NAME}
      --push
      ${CI_COMMIT_TAG#*-}
  only:
    - tags

test-dev:
  stage: test
  needs:
    - build-dev
  before_script:
    - apk add python3
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
  script:
    - >
      ./build.py
      --repo ${CI_REGISTRY_IMAGE}
      --target=dev
      --tag ${CI_COMMIT_TAG}
      test
  only:
    - tags

push:
  stage: release
  needs:
    - build-prod
    - test-dev
  image:
    name: ananace/skopeo
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none
    IMAGE_NAME: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
    SRC_REGISTRY_CREDS: ${CI_REGISTRY_USER}:${CI_JOB_TOKEN}
    DST_REGISTRY_CREDS: ${DOCKER_HUB_USER}:${DOCKER_HUB_TOKEN}
  script:
    - >
      /skopeo
      copy
      --multi-arch all
      --src-creds=${SRC_REGISTRY_CREDS}
      --dest-creds=${DST_REGISTRY_CREDS}
      docker://${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}-dev
      docker://${PUBLIC_REPOSITORY}:${CI_COMMIT_TAG}-dev
    - >
      /skopeo
      copy
      --multi-arch all
      --src-creds=${SRC_REGISTRY_CREDS}
      --dest-creds=${DST_REGISTRY_CREDS}
      docker://${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
      docker://${PUBLIC_REPOSITORY}:${CI_COMMIT_TAG}
  only:
    - tags
